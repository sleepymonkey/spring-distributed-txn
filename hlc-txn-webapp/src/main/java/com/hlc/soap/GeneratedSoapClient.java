package com.hlc.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.WebServiceRef;

//import com.sun.xml.ws.api.tx.at.Transactional;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "TestTxnSoapServiceImplService", targetNamespace = "http://soap.hlc.com/", wsdlLocation = "http://localhost:8181/txnSoapService?wsdl")
public class GeneratedSoapClient
        extends Service
{

    private final static URL TESTTXNSOAPSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException TESTTXNSOAPSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName TESTTXNSOAPSERVICEIMPLSERVICE_QNAME = new QName("http://soap.hlc.com/", "TestTxnSoapServiceImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8181/txnSoapService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TESTTXNSOAPSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        TESTTXNSOAPSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public GeneratedSoapClient() {
        super(__getWsdlLocation(), TESTTXNSOAPSERVICEIMPLSERVICE_QNAME);
    }

    public GeneratedSoapClient(WebServiceFeature... features) {
        super(__getWsdlLocation(), TESTTXNSOAPSERVICEIMPLSERVICE_QNAME, features);
    }

    public GeneratedSoapClient(URL wsdlLocation) {
        super(wsdlLocation, TESTTXNSOAPSERVICEIMPLSERVICE_QNAME);
    }

    public GeneratedSoapClient(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TESTTXNSOAPSERVICEIMPLSERVICE_QNAME, features);
    }

    public GeneratedSoapClient(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public GeneratedSoapClient(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns TestTxnSoapService
     */
    @WebEndpoint(name = "TestTxnSoapServiceImplPort")
//    @Transactional(value = Transactional.TransactionFlowType.MANDATORY /*,
//            version = Transactional.Version.WSAT10*/ )
    @WebServiceRef()
    public TestTxnSoapService getTestTxnSoapServiceImplPort() {
        return super.getPort(new QName("http://soap.hlc.com/", "TestTxnSoapServiceImplPort"), TestTxnSoapService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TestTxnSoapService
     */
    @WebEndpoint(name = "TestTxnSoapServiceImplPort")
    public TestTxnSoapService getTestTxnSoapServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://soap.hlc.com/", "TestTxnSoapServiceImplPort"), TestTxnSoapService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TESTTXNSOAPSERVICEIMPLSERVICE_EXCEPTION!= null) {
            throw TESTTXNSOAPSERVICEIMPLSERVICE_EXCEPTION;
        }
        return TESTTXNSOAPSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
